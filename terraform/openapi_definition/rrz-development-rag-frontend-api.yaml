openapi: "3.0.1"
info:
  title: "fe_test"
  version: "2024-09-25T12:04:38Z"
paths:
  /:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::${aws_account_num}:role/${aws_role}"
        httpMethod: "GET"
        uri: "arn:aws:apigateway:${aws_region}:s3:path/${aws_s3_bucket}/index.html"
        responses:
          default:
            statusCode: "200"
            contentHandling: "CONVERT_TO_BINARY"
        passthroughBehavior: "when_no_match"
        type: "aws"
  /manifest.json:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::${aws_account_num}:role/${aws_role}"
        httpMethod: "GET"
        uri: "arn:aws:apigateway:${aws_region}:s3:path/${aws_s3_bucket}/manifest.json"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "aws"
  /favicon.ico:
    get:
      responses:
        "200":
          description: "200 response"
          headers:
            Content-Type:
              schema:
                type: "string"
          content:
            image/x-icon:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::${aws_account_num}:role/${aws_role}"
        httpMethod: "GET"
        uri: "arn:aws:apigateway:${aws_region}:s3:path/${aws_s3_bucket}/favicon.ico"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Content-Type: "integration.response.header.Content-Type"
            contentHandling: "CONVERT_TO_BINARY"
        passthroughBehavior: "when_no_templates"
        type: "aws"
  /logo192.png:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            image/png:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::${aws_account_num}:role/${aws_role}"
        httpMethod: "GET"
        uri: "arn:aws:apigateway:${aws_region}:s3:path/${aws_s3_bucket}/logo192.png"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "aws"
  /static/js/{object}:
    get:
      parameters:
      - name: "object"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::${aws_account_num}:role/${aws_role}"
        httpMethod: "GET"
        uri: "arn:aws:apigateway:${aws_region}:s3:path/${aws_s3_bucket}/static/js/{object}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.object: "method.request.path.object"
        passthroughBehavior: "when_no_match"
        type: "aws"
  /static/media/{object}:
    get:
      parameters:
      - name: "object"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::${aws_account_num}:role/${aws_role}"
        httpMethod: "GET"
        uri: "arn:aws:apigateway:${aws_region}:s3:path/${aws_s3_bucket}/static/media/{object}"
        responses:
          default:
            statusCode: "200"
            contentHandling: "CONVERT_TO_BINARY"
        requestParameters:
          integration.request.path.object: "method.request.path.object"
        passthroughBehavior: "when_no_match"
        type: "aws"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
x-amazon-apigateway-gateway-responses:
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
x-amazon-apigateway-binary-media-types:
- "application/octen-stream"
- "image/x-icon"
- "image/png"
